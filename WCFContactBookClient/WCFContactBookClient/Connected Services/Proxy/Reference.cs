//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFContactBookClient.Proxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/WCFContactBook")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFContactBookClient.Proxy.Group GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFContactBookClient.Proxy.Group Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/WCFContactBook")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IContactBook")]
    public interface IContactBook {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetAllContacts", ReplyAction="http://tempuri.org/IContactBook/GetAllContactsResponse")]
        WCFContactBookClient.Proxy.Contact[] GetAllContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetAllContacts", ReplyAction="http://tempuri.org/IContactBook/GetAllContactsResponse")]
        System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Contact[]> GetAllContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetAllGroups", ReplyAction="http://tempuri.org/IContactBook/GetAllGroupsResponse")]
        WCFContactBookClient.Proxy.Group[] GetAllGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetAllGroups", ReplyAction="http://tempuri.org/IContactBook/GetAllGroupsResponse")]
        System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Group[]> GetAllGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetContactsByGroup", ReplyAction="http://tempuri.org/IContactBook/GetContactsByGroupResponse")]
        WCFContactBookClient.Proxy.Contact[] GetContactsByGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/GetContactsByGroup", ReplyAction="http://tempuri.org/IContactBook/GetContactsByGroupResponse")]
        System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Contact[]> GetContactsByGroupAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/CreateGroup", ReplyAction="http://tempuri.org/IContactBook/CreateGroupResponse")]
        void CreateGroup(WCFContactBookClient.Proxy.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/CreateGroup", ReplyAction="http://tempuri.org/IContactBook/CreateGroupResponse")]
        System.Threading.Tasks.Task CreateGroupAsync(WCFContactBookClient.Proxy.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/CreateContact", ReplyAction="http://tempuri.org/IContactBook/CreateContactResponse")]
        void CreateContact(WCFContactBookClient.Proxy.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/CreateContact", ReplyAction="http://tempuri.org/IContactBook/CreateContactResponse")]
        System.Threading.Tasks.Task CreateContactAsync(WCFContactBookClient.Proxy.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/UpdateContact", ReplyAction="http://tempuri.org/IContactBook/UpdateContactResponse")]
        void UpdateContact(WCFContactBookClient.Proxy.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/UpdateContact", ReplyAction="http://tempuri.org/IContactBook/UpdateContactResponse")]
        System.Threading.Tasks.Task UpdateContactAsync(WCFContactBookClient.Proxy.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/DeleteContact", ReplyAction="http://tempuri.org/IContactBook/DeleteContactResponse")]
        void DeleteContact(int contactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/DeleteContact", ReplyAction="http://tempuri.org/IContactBook/DeleteContactResponse")]
        System.Threading.Tasks.Task DeleteContactAsync(int contactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/DeleteGroup", ReplyAction="http://tempuri.org/IContactBook/DeleteGroupResponse")]
        void DeleteGroup(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactBook/DeleteGroup", ReplyAction="http://tempuri.org/IContactBook/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(int groupID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactBookChannel : WCFContactBookClient.Proxy.IContactBook, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactBookClient : System.ServiceModel.ClientBase<WCFContactBookClient.Proxy.IContactBook>, WCFContactBookClient.Proxy.IContactBook {
        
        public ContactBookClient() {
        }
        
        public ContactBookClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactBookClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactBookClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactBookClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFContactBookClient.Proxy.Contact[] GetAllContacts() {
            return base.Channel.GetAllContacts();
        }
        
        public System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Contact[]> GetAllContactsAsync() {
            return base.Channel.GetAllContactsAsync();
        }
        
        public WCFContactBookClient.Proxy.Group[] GetAllGroups() {
            return base.Channel.GetAllGroups();
        }
        
        public System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Group[]> GetAllGroupsAsync() {
            return base.Channel.GetAllGroupsAsync();
        }
        
        public WCFContactBookClient.Proxy.Contact[] GetContactsByGroup(string groupName) {
            return base.Channel.GetContactsByGroup(groupName);
        }
        
        public System.Threading.Tasks.Task<WCFContactBookClient.Proxy.Contact[]> GetContactsByGroupAsync(string groupName) {
            return base.Channel.GetContactsByGroupAsync(groupName);
        }
        
        public void CreateGroup(WCFContactBookClient.Proxy.Group group) {
            base.Channel.CreateGroup(group);
        }
        
        public System.Threading.Tasks.Task CreateGroupAsync(WCFContactBookClient.Proxy.Group group) {
            return base.Channel.CreateGroupAsync(group);
        }
        
        public void CreateContact(WCFContactBookClient.Proxy.Contact contact) {
            base.Channel.CreateContact(contact);
        }
        
        public System.Threading.Tasks.Task CreateContactAsync(WCFContactBookClient.Proxy.Contact contact) {
            return base.Channel.CreateContactAsync(contact);
        }
        
        public void UpdateContact(WCFContactBookClient.Proxy.Contact contact) {
            base.Channel.UpdateContact(contact);
        }
        
        public System.Threading.Tasks.Task UpdateContactAsync(WCFContactBookClient.Proxy.Contact contact) {
            return base.Channel.UpdateContactAsync(contact);
        }
        
        public void DeleteContact(int contactID) {
            base.Channel.DeleteContact(contactID);
        }
        
        public System.Threading.Tasks.Task DeleteContactAsync(int contactID) {
            return base.Channel.DeleteContactAsync(contactID);
        }
        
        public void DeleteGroup(int groupID) {
            base.Channel.DeleteGroup(groupID);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(int groupID) {
            return base.Channel.DeleteGroupAsync(groupID);
        }
    }
}
